name: CI/CD - Build & Deploy Backend

on:
  push:
    branches:
      - main  # O la rama que estés utilizando

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Iniciar sesión en Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Tu usuario de Docker Hub
          password: ${{ secrets.DOCKER_PASSWORD }}  # Tu contraseña de Docker Hub

      # Paso 3: Construir y empujar la imagen del Backend
      - name: Build and Push Backend Docker Image
        run: |
          # Construir la imagen de Docker para el backend
          docker build -f server/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/servidor:${{ github.sha }} .
          
          # Empujar la imagen al repositorio de Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/servidor:${{ github.sha }}

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Paso 4: SSH al servidor EC2 para desplegar el contenedor
      - name: SSH into EC2 (Backend) and deploy Docker container
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_SERVER }}  # IP del servidor EC2 donde se va a desplegar el backend
          username: ubuntu  # Usuario de la instancia EC2 (usualmente 'ubuntu')
          key: ${{ secrets.SERVER_KEY }}     # Clave privada para acceder a la instancia EC2
          script: |
            # Detener cualquier contenedor viejo
            sudo docker stop servidor || true
            sudo docker rm servidor || true

            # Descargar la última imagen del Backend desde Docker Hub
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/servidor:${{ github.sha }}

            # Ejecutar el contenedor en el puerto 3011
            sudo docker run -d --name servidor -p 3011:3011 ${{ secrets.DOCKER_USERNAME }}/servidor:${{ github.sha }}

            # Verificar que el contenedor se está ejecutando
            sudo docker ps
